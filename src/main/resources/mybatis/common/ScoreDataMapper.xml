<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.common.dao.ScoreDataDao">

	<select id="get" resultType="com.bootdo.common.domain.ScoreDataDO">
		select `data_id`,`data_time`,`data_table` from tf_score_data where data_id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.common.domain.ScoreDataDO">
		select `data_id`,`data_time`,`data_table` from tf_score_data
        <where>  
		  		  <if test="dataId != null and dataId != ''"> and data_id = #{dataId} </if>
		  		  <if test="dataTime != null and dataTime != ''"> and data_time = #{dataTime} </if>
		  		  <if test="dataTable != null and dataTable != ''"> and data_table = #{dataTable} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by data_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from tf_score_data
		 <where>  
		  		  <if test="dataId != null and dataId != ''"> and data_id = #{dataId} </if>
		  		  <if test="dataTime != null and dataTime != ''"> and data_time = #{dataTime} </if>
		  		  <if test="dataTable != null and dataTable != ''"> and data_table = #{dataTable} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.common.domain.ScoreDataDO">
		insert into tf_score_data
		(
			`data_id`, 
			`data_time`, 
			`data_table`
		)
		values
		(
			#{dataId}, 
			#{dataTime}, 
			#{dataTable}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.common.domain.ScoreDataDO">
		update tf_score_data 
		<set>
			<if test="dataTime != null">`data_time` = #{dataTime}, </if>
			<if test="dataTable != null">`data_table` = #{dataTable}</if>
		</set>
		where data_id = #{dataId}
	</update>
	
	<delete id="remove">
		delete from tf_score_data where data_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from tf_score_data where data_id in 
		<foreach item="dataId" collection="array" open="(" separator="," close=")">
			#{dataId}
		</foreach>
	</delete>

</mapper>